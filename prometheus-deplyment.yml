apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: prometheus
data:
  prometheus.yml: |-
    global:
      scrape_interval:     10s
      evaluation_interval: 15s
    alerting:
      alertmanagers:
      - static_configs:
        - targets:
          - 192.168.59.100:31430
    rule_files:
      - "/prom-vol/alert-rule.yml"      
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
        - targets: ['localhost:9090']
      - job_name: 'black-box-exporter'
        static_configs:
        - targets: 
          - 192.168.59.100:31219
      - job_name: 'node-exporter'
        static_configs:
        - targets: 
          - 192.168.59.100:31916    
      - job_name: 'prom-pod'
        static_configs:
        - targets: ['prom-service:5000']
      - job_name: 'prom2-pod'
        static_configs:
        - targets: ['prom2-service:7000']
      - job_name: 'yace'
        static_configs:
        - targets: ['yace-service:5000']

      - job_name: 'kubelet'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true  # Required with Minikube.
      - job_name: 'cadvisor'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true  # Required with Minikube.
        metrics_path: /metrics/cadvisor
      # - job_name: 'k8apiserver'
      #   kubernetes_sd_configs:
      #   - role: endpoints
      #   scheme: https
      #   tls_config:
      #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      #     insecure_skip_verify: true  # Required if using Minikube.
      #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      #   relabel_configs:
      # - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      #      action: keep
      #      regex: default;kubernetes;https
      # - job_name: 'k8services'
      #       kubernetes_sd_configs:
      #       - role: endpoints
      #       relabel_configs:
      #       - source_labels:
      #           - __meta_kubernetes_namespace
      #           - __meta_kubernetes_service_name
      #         action: drop
      #         regex: default;kubernetes
      #       - source_labels:
      #           - __meta_kubernetes_namespace
      #         regex: default
      #         action: keep
      #       - source_labels: [__meta_kubernetes_service_name]
      #         target_label: job
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: prometheus
  labels:
    app: prometheus
spec:
  ports:
    - port: 9090
      nodePort: 30003
  selector:
    app: prometheus
    tier: backend
  type: LoadBalancer

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prom-pvc
  namespace: prometheus
  labels:
    app: prometheus
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: alertrule-config
  namespace: prometheus
data:
  alert-rule.yml: |-
    groups:
      - name: alert_rules
        rules:
          - alert: InstanceDown
            expr: up == 0
            for: 1m
            labels:
              severity: critical
            annotations:
              summary: "Instance [{{ $labels.instance }}] down"
              description: "[{{ $labels.instance }}] of job [{{ $labels.job }}] has been down for more than 1 minute."
          - alert: High Pod Memory
            expr: sum(container_memory_usage_bytes) > 1
            for: 1m
            labels:
              severity: slack
            annotations:
              summary: High Memory Usage
          - alert: APIHighRequestLatency
            expr: api_http_request_latencies_second{quantile="0.5"} > 1
            for: 10m
            annotations:
              summary: "High request latency on {{ $labels.instance }}"
              description: "{{ $labels.instance }} has a median request latency above 1s (current value: {{ $value }}s)"
          - alert: MemoryPercentageByte
            expr: 100-(100*node_memory_MemFree_bytes/node_memory_MemTotal_bytes)
            for: 10m
            annotations:
              summary: "Memory in percentage {{ $labels.instance }}"
              description: "{{ $labels.instance }} has a median request latency above 1s (current value: {{ $value }}s)"
---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      tier: backend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: prometheus
        tier: backend
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - name: alertrule-volume
              mountPath: /prom-vol
          ports:
            - containerPort: 80
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
        - name: alertrule-volume
          configMap:
            name: alertrule-config
